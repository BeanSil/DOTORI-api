openapi: 3.0.2
info:
  version: '1.0.0'
  title: DOTORI
  license:
    name: Apache 2.0
    url: 'http://www.apache.org/licenses/LICENSE-2.0.html'
  x-logo:
    url: 'https://redocly.github.io/openapi-template/logo.png'

  description: |
    DOTORI API 문서

    # 개요
    이 API 문서는 빈실 DOTORI API의 스펙에 대해 다루고 있습니다.
tags:
  - name: General
    description: 외부 접속 불가한 API
  - name: Dormitory
    description: 기숙사 관련 기능
  - name: Account
    description: 계정 관련 기능
servers:
  - url: 'http://localhost:5000/api'
  - url: 'http://dotori.beansil.com/api'
  - url: 'https://dotori.beansil.com/api'

paths:
  '/':
    get:
      tags:
        - General
      responses:
        '200':
          description: Success
      summary: 서버가 살아있는지 체크합니다.

# An object to hold reusable parts that can be used across the definition
components:
  schemas:
    User:
      type: object
      properties:
        username:
          description: User supplied username
          type: string
          minLength: 4
          example: John78
        firstName:
          description: User first name
          type: string
          minLength: 1
          example: John
        lastName:
          description: User last name
          type: string
          minLength: 1
          example: Smith
  headers:
  # Security scheme definitions that can be used across the definition.
  securitySchemes:
    main_auth: # security definition name (you can name it as you want)
      # the following options are specific to oauth2 type
      type: oauth2 # authorization type, one of: oauth2, apiKey, http
      flows:
        implicit:
          authorizationUrl: 'http://dotori.beansil.com/api/account/oauth/dialog'
          scopes:
            'read:users': read users info
    api_key:  # security definition name (you can name it as you want)
      type: apiKey
      # The following options are specific to apiKey type
      in: header # Where API key will be passed: header or query
      name: api_key # API key parameter name
    basic_auth: # security definition name (you can name it as you want)
      type: http
      scheme: basic
